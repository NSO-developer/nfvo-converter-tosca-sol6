
# These must match with 'provider-identifiers.{}'
# If the given provider for a VNFD matches with one of these, then it will automatically
# take the identifiers from this file
providers=["nokia"]

[provider-identifiers.nokia]
    virtual-compute             = ["type", "tosca.nodes.nfv.VirtualCompute"]
    virtual-storage             = ["type", "tosca.nodes.nfv.VirtualStorage"]
    sw-image                    = ["type", "tosca.nodes.nfv.SwImage"]


# Note: If there is a variable with "path_VAL", that means it will not be parsed for the path
# heirarchy, but will instead be set with the value given
# The structure of the TOSCA file, in paths
[tosca]
    topology_template           = "topology_template"
    substitution_mappings       = ["topology_template", "substitution_mappings"]
    node_templates              = ["topology_template", "node_templates"]

    sub_properties              = ["substitution_mappings", "properties"]
    descriptor_id               = ["sub_properties", "descriptor_id"]
    descriptor_version          = ["sub_properties", "descriptor_version"]
    provider                    = ["sub_properties", "provider"]
    product_name                = ["sub_properties", "product_name"]
    software_version            = ["sub_properties", "software_version"]
    vnfm_info                   = ["sub_properties", "vnfm_info"]
    requirements                = ["sub_properties", "requirements"]
    product_info_name           = ["sub_properties", "product_info_name"]
    product_info_desc           = ["sub_properties", "product_info_description"]
    capabilities                = ["substitution_mappings", "capabilities"]

    vnf                         = ["capabilities", "vnf"]
    vnf_provider                = ["sub_properties", "provider"]

    virtual_compute             = ["node_templates", "{}"]
    virtual_compute_prop        = ["virtual_compute", "properties"]
    virtual_compute_mem_size    = ["virtual_compute_prop", "virtual_memory.virtual_mem_size"]
    virtual_compute_virt_cpu    = ["virtual_compute_prop", "virtual_cpu"]
    virtual_compute_cpu_num     = ["virtual_compute_virt_cpu", "num_virtual_cpu"]
    virtual_compute_cpu_arch    = ["virtual_compute_virt_cpu", "cpu_architecture"]
    virtual_compute_cpu_clock   = ["virtual_compute_virt_cpu", "virtual_cpu_clock"]

    virtual_storage             = ["node_templates", "{}"]
    virtual_storage_prop        = ["virtual_storage", "properties"]
    virtual_storage_type        = ["virtual_storage_prop", "type_of_storage"]
    virtual_storage_size        = ["virtual_storage_prop", "size_of_storage"]

    sw_image_r                  = ["node_templates", "{}"]
    sw_image                    = ["sw_image_r", "properties"]
    sw_image_name               = ["sw_image", "name"]
    sw_image_container_fmt      = ["sw_image", "container_format"]
    sw_image_version            = ["sw_image", "version"]
    sw_image_checksum           = ["sw_image", "checksum"]
    sw_image_min_disk           = ["sw_image", "min_disk"]
    sw_image_min_ram            = ["sw_image", "min_ram"]
    sw_image_size               = ["sw_image", "size"]
    sw_image_disk_fmt           = ["sw_image", "disk_format"]
    sw_image_sw_image           = ["sw_image", "sw_image"]
    sw_image_operating_system   = ["sw_image", "operating_system"]
    sw_image_supp_virt_environs = ["sw_image", "supported_virtualisation_environments"]


# Sol6 Path configurations
[sol6]
    # **********
    # ** VNFD **
    # **********
    vnfd = "vnfd"
    vnfd_id = ["vnfd", "id"]
    vnfd_provider = ["vnfd", "provider"]
    vnfd_product = ["vnfd", "product-name"]
    vnfd_software_ver = ["vnfd", "software-version"]
    vnfd_ver = ["vnfd", "version"]
    vnfd_info_name = ["vnfd", "product-info-name"]
    vnfd_info_desc = ["vnfd", "product-info-description"]
    vnfd_vnfm_info = ["vnfd", "vnfm-info"]

    VALID_PROTOCOLS_VAL = ["Ethernet", "IPv4", "IPv6", "MPLS", "ODU2", "Pseudo-Wire"]

    # ********************************
    # ** Virtual Compute Descriptor **
    # ********************************
    vnfd_virt_compute_desc          = ["vnfd", "virtual-compute-descriptor.{}"]
    vnfd_vcd_id                     = ["vnfd_virt_compute_desc", "id"]
    vnfd_vcd_flavor_name            = ["vnfd_virt_compute_desc", "tailf-etsi-rel3-nfvo-vnfm-sol1-vnfd-extensions:flavor-name-variable"]
    vnfd_virtual_cpu                = ["vnfd_virt_compute_desc", "virtual-cpu"]
    vnfd_vcd_cpu_num                = ["vnfd_virtual_cpu", "num-virtual-cpu"]
    vnfd_vcd_cpu_clock              = ["vnfd_virtual_cpu", "clock"]
    vnfd_vcd_cpu_arch               = ["vnfd_virtual_cpu", "cpu-architecture"]
    vnfd_vcd_cpu_oversub            = ["vnfd_virtual_cpu", "oversubscription-policy"]
    vnfd_vcd_vdu_cpu_req            = ["vnfd_virtual_cpu", "vdu-cpu-requirements"]
    vnfd_vcd_mem_size               = ["vnfd_virt_compute_desc", "virtual-memory.size"]

    # ********************************
    # ** Virtual Storage Descriptor **
    # ********************************
    vnfd_virt_storage_desc = ["vnfd", "virtual-storage-descriptor.{}"]
    vnfd_virt_storage_id = ["vnfd_virt_storage_desc", "id"]
    vnfd_virt_storage_type = ["vnfd_virt_storage_desc", "type-of-storage"]
    VIRT_STORAGE_DEFAULT_VAL = "root"
    vnfd_virt_storage_size = ["vnfd_virt_storage_desc", "size-of-storage"]
    vnfd_virt_storage_sw_image = ["vnfd_virt_storage_desc", "sw-image-desc"]

    # ***********************
    # ** Deployment Flavor **
    # ***********************
    deployment_flavor = ["vnfd", "df"]
    df_id = ["deployment_flavor", "id"]
    df_desc = ["deployment_flavor", "description"]
    df_vdu_profile = ["deployment_flavor", "vdu-profile.{}"]
    df_vdu_prof_id = ["df_vdu_profile", "id"]
    df_vdu_prof_inst_min = ["df_vdu_profile", "min-number-of-instances"]
    df_vdu_prof_inst_max = ["df_vdu_profile", "max-number-of-instances"]
    # -- Instantiation Level
    df_inst_level = ["deployment_flavor", "instantiation-level"]
    df_inst_level_id = ["df_inst_level", "id"]
    df_inst_level_desc = ["df_inst_level", "description"]
    df_inst_level_vdu_level = ["df_inst_level", "vdu-level.{}"]
    df_inst_level_vdu_vdu = ["df_inst_level_vdu_level", "id"]
    df_inst_level_vdu_num = ["df_inst_level_vdu_level", "number-of-instances"]
    # -- Scaling Info
    df_inst_scaling_info = ["df_inst_level", "scaling-aspect.{}"]
    df_inst_scaling_aspect = ["df_inst_scaling_info", "id"]
    df_inst_scaling_level = ["df_inst_scaling_info", "scale-level"]

    df_scale_aspect = ["deployment_flavor", "scaling-aspect.{}"]
    df_scale_aspect_id = ["df_scale_aspect", "id"]
    df_scale_aspect_name = ["df_scale_aspect", "name"]
    df_scale_aspect_desc = ["df_scale_aspect", "description"]
    df_scale_aspect_max_level = ["df_scale_aspect", "max-scale-level"]
    df_scale_aspect_delta_det = ["df_scale_aspect", "aspect-delta-details"]
    df_scale_aspect_deltas = ["df_scale_aspect_delta_det", "deltas"]
    df_scale_aspect_vdu_delta = ["df_scale_aspect", "vdu-delta.{}"]
    df_scale_aspect_vdu_id = ["df_scale_aspect_vdu_delta", "id"]
    df_scale_aspect_vdu_num = ["df_scale_aspect_vdu_delta", "number-of-instances"]

    # ****************************
    # ** Virtual/External Links **
    # ****************************
    virt_link_desc = ["vnfd", "int-virtual-link-desc.{}"]
    virt_link_desc_id = ["virt_link_desc", "id"]
    virt_link_desc_protocol = ["virt_link_desc", "connectivity-type.layer-protocol"]

    ext_cpd = ["vnfd", "ext-cpd.{}"]
    ext_cpd_id = ["ext_cpd", "id"]
    ext_cpd_protocol = ["ext_cpd", "layer-protocol"]
    ext_cpd_virt_link = ["ext_cpd", "int-virtual-link-desc"]


    # *********
    # ** VDU **
    # *********
    vdus = ["vnfd", "vdu"]
    vdu = ["vdus", "{}"]
    vdu_name = ["vdu", "name"]
    vdu_desc = ["vdu", "description"]
    vdu_id = ["vdu", "id"]
    vdu_boot_order = ["vdu", "boot-order.{}"]
    vdu_boot_key = ["vdu_boot_order", "key"]
    vdu_boot_value = ["vdu_boot_order", "value"]
    vdu_vc_desc = ["vdu", "virtual-compute-desc.{}"]
    vdu_vs_desc = ["vdu", "virtual-storage-desc.{}"]

    # ********************************
    # ** Internal Connection Points **
    # ********************************
    int_cpd = ["vdu", "int-cpd.{}"]
    int_cpd_id = ["int_cpd", "id"]
    int_cpd_layer_prot = ["int_cpd", "layer-protocol"]
    int_cpd_virt_link_desc = ["int_cpd", "int-virtual-link-desc"]

    KEY_VIRT_LINK_MGMT_VAL = "CP_MGMT"
    KEY_VIRT_LINK_MGMT_PROT_VAL = "IPv4"
    KEY_VIRT_LINK_ORCH_VAL = "CP_ORCH"
    KEY_VIRT_LINK_ORCH_PROT_VAL = "IPv4"
    KEY_EXT_CP_MGMT_VAL = "CP_EXT_MGMT"
    KEY_EXT_CP_MGMT_PROT_VAL = "IPv4"
    KEY_EXT_CP_ORCH_VAL = "CP_EXT_ORCH"
    KEY_EXT_CP_ORCH_PROT_VAL = "IPv4"

    # *******************************
    # ** Software Image Descriptor **
    # *******************************
    sw_img_desc = ["vnfd", "sw-image-desc.{}"]
    sw_id = ["sw_img_desc", "id"]
    sw_name = ["sw_img_desc", "name"]
    sw_image_name_var = ["sw_img_desc", "tailf-etsi-rel3-nfvo-vnfm-sol1-vnfd-extensions:image-name-variable"]
    sw_version = ["sw_img_desc", "version"]
    sw_checksum = ["sw_img_desc", "checksum"]
    sw_container_format = ["sw_img_desc", "container-format"]
    sw_disk_format = ["sw_img_desc", "disk-format"]
    sw_min_disk = ["sw_img_desc", "min-disk"]
    sw_min_ram = ["sw_img_desc", "min-ram"]
    sw_size = ["sw_img_desc", "size"]
    sw_image = ["sw_img_desc", "image"]
    sw_operating_sys = ["sw_img_desc", "operating-system"]
    sw_supp_virt_environ = ["sw_img_desc", "supported-virtualisation-environments"]
